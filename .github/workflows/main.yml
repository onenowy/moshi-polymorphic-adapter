name: CI

on: [push, pull_request, workflow_dispatch]

jobs:
  build_test:
    if: !contains(github.event.head_commit.message, "skip ci")
    runs-on: ubuntu-latest
    strategy:
      matrix:
        module: [ 'moshi-polymorphic-adapter', 'kotlin-sealed:reflect', 'kotlin-sealed:codegen' ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Cache
        uses: actions/cache@v2
        with:
          path:
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'zulu'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Test with Gradle
        run: ./gradlew :${{ matrix.module }}:check --stacktrace

      - name: Test report
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          check_name: "Unit Test Results"
          files: '**/build/test-results/**/*.xml'
          report_individual_runs: "true"
          check_run_annotations: all tests, skipped tests

  publish:
    needs: [build_test]
    name: Publish artifacts
    if: github.repository == 'onenowy/moshi-polymorphic-adapter' && contains(github.event.head_commit.message, '[Release')
    uses: onenowy/moshi-polymorphic-adapter/.github/workflows/publish.yml@main

  depency_test:
    needs: [publish]
    name: Dependency test
    if: github.repository == 'onenowy/moshi-polymorphic-adapter' && contains(github.event.head_commit.message, '[Release Candidate]')
    uses: onenowy/moshi-polymorphic-adapter/.github/workflows/dependency_test.yml@main