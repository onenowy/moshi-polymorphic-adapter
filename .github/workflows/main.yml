name: CI

on: [push, pull_request, workflow_dispatch]

jobs:
  build_test:
    if: github.repository == 'onenowy/moshi-polymorphic-adapter' && contains(github.event.head_commit.message, 'Release')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Cache
        uses: actions/cache@v2
        with:
          path:
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Unit Tests
        run: ./gradlew :moshi-polymorphic-adapter:check :kotlin-sealed:codegen:check :kotlin-sealed:reflect:check --stacktrace

      - name: Test report
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          check_name: "Unit Test Results"
          files: '**/build/test-results/**/*.xml'
          report_individual_runs: "true"
          check_run_annotations: all tests, skipped tests

  publish:
    needs: [build_test]
    name: Publish artifacts
    if: github.repository == 'onenowy/moshi-polymorphic-adapter' && contains(github.event.head_commit.message, 'Release')
    uses: onenowy/moshi-polymorphic-adapter/.github/workflows/publish.yml@ksp
    secrets:
      ORG_GRADLE_PROJECT_signingKey: ${{ secrets.ORG_GRADLE_PROJECT_signingKey }}
      ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.ORG_GRADLE_PROJECT_signingPassword }}
      ORG_GRADLE_PROJECT_ossrhUsername: ${{ secrets.ORG_GRADLE_PROJECT_ossrhUsername }}
      ORG_GRADLE_PROJECT_ossrhPassword: ${{ secrets.ORG_GRADLE_PROJECT_ossrhPassword }}

#  dependencies_test:
#    needs: [publish]
#    name: Dependencies Test
#    if: github.repository == 'onenowy/moshi-polymorphic-adapter' && contains(github.event.head_commit.message, 'Snapshot')
#    uses: onenowy/moshi-polymorphic-adapter/.github/workflows/dependencies_test.yml@main